1.
Find all the topics and tasks which are thought in the month of October



const topicsInOctober = db.topics.find({
  date: { 
    $gte: ISODate("2023-10-01T00:00:00Z"), 
    $lt: ISODate("2023-11-01T00:00:00Z") 
  }
}).toArray();

const tasksInOctober = db.tasks.find({
  submission_date: { 
    $gte: ISODate("2023-10-01T00:00:00Z"), 
    $lt: ISODate("2023-11-01T00:00:00Z") 
  }
}).toArray();

// Combine results
to combine both querry 


const combinedResults = [...topicsInOctober.map(topic => ({ name: topic.topic_name, type: "Topic", date: topic.date })), 
                         ...tasksInOctober.map(task => ({ name: task.task_name, type: "Task", date: task.submission_date }))];

console.log(combinedResults);


2. Find all the company drives which appeared between 15 oct-2020 and 31-oct-2020




const companyDrives = db.company_drives.find({
  drive_date: { 
    $gte: ISODate("2023-10-15T00:00:00Z"), 
    $lt: ISODate("2023-10-31T00:00:00Z") 
  }
});

console.log(companyDrives);

3.Find all the company drives and students who are appeared for the placement.


db.company_drives.aggregate([
  {
    $lookup: {
      from: "users",               
      localField: "attendees",     
      foreignField: "_id",          
      as: "attendeesDetails"      
    }
  },
  {
    $project: {
      company_name: 1,              
      attendees: "$attendeesDetails" 
    }
  }
]);

4. Find the number of problems solved by the user in codekata


db.codekata.aggregate([
  {
    $group: {
      _id: "$user_id",                
      totalSolved: { $sum: 1 }        
    }
  },
  {
    $lookup: {
      from: "users",                 
      localField: "_id",              
      foreignField: "_id",
      as: "userDetails"
    }
  },
  {
    $project: {
      userId: "$_id",                 
      totalSolved: 1,                
      userName: { $arrayElemAt: ["$userDetails.name", 0] }
    }
  }
]);


5.Find all the mentors with who has the mentee's count more than 15


db.mentors.aggregate([
  {
    $match: {
      mentees_count: { $gt: 15 }
    }
  },
  {
    $project: {
      name: 1,
      email: 1,
      phone: 1,
      mentees_count: 1
    }
  }
]);




6. Find the number of users who are absent and task is not submitted  between 15 oct-2020 and 31-oct-2020

db.users.aggregate([
  {
    $lookup: {
      from: "attendance",
      localField: "_id",
      foreignField: "user_id",
      as: "attendance_info"
    }
  },
  {
    $lookup: {
      from: "tasks",
      localField: "_id",
      foreignField: "user_id",
      as: "tasks_info"
    }
  },
  {
    $match: {
      "attendance.date": {
        $gte: ISODate("2020-10-15T00:00:00Z"),
        $lt: ISODate("2020-10-31T00:00:00Z")
      },
      "attendance.status": "absent",
      "tasks_info.submission_date": {
        $gte: ISODate("2020-10-15T00:00:00Z"),
        $lt: ISODate("2020-10-31T00:00:00Z")
      },
      "tasks.status": "not submitted"
    }
  },
  {
    $project: {
      name: 1,
      email: 1,
      attendance_info: 1,
      tasks_info: 1
    }
  }
]);
db.users.aggregate([
  {
    $lookup: {
      from: "attendence",
      localField: "_id",
      foreignField: "user_id",
      as: "attendance_info"
    }
  },
  {
    $lookup: {
      from: "tasks",
      localField: "_id",
      foreignField: "user_id",
      as: "tasks_info"
    }
  },
  {
    $match: {
      "attendance_info.date": {
        $gte: ISODate("2020-10-15T00:00:00Z"),
        $lt: ISODate("2020-10-31T00:00:00Z")
      },
      "attendance_info.status": "absent",
      "tasks_info.submission_date": {
        $gte: ISODate("2020-10-15T00:00:00Z"),
        $lt: ISODate("2020-10-31T00:00:00Z")
      },
      "tasks_info.status": "not submitted"
    }
  },
  {
    $project: {
      name: 1,
      email: 1,
      attendance_info: 1,
      tasks_info: 1
    }
  }
]);